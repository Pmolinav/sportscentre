services:
  postgres:
    container_name: postgres
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: sportscentre
    volumes:
      - data-postgres:/var/lib/postgresql/data
    restart: always
    networks:
      - spring

  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:latest
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - spring
    ports:
      - '2181:2181'
    restart: always

  kafka:
    container_name: kafka
    image: bitnami/kafka:latest
    depends_on:
      - zookeeper
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    networks:
      - spring
    ports:
      - '9092:9092'
    restart: always

  logstash:
    image: elastic/logstash:8.15.4
    command: -f /etc/logstash/conf.d/
    volumes:
      - ./elk/logstash/:/etc/logstash/conf.d/
      - ./Springboot-Elk.log:/tmp/logs/Springboot-Elk.log
    ports:
      - "5044:5044"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch
    networks:
      - spring

  kibana:
    image: elastic/kibana:8.15.4
    volumes:
      - ./elk/kibana/:/usr/share/kibana/config/
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    entrypoint: ["./bin/kibana", "--allow-root"]
    networks:
      - spring

  elasticsearch:
    image: elastic/elasticsearch:8.15.4
    volumes:
      - ./elk/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - spring

  configurationboapi:
    container_name: configurationboapi
    image: pablo7molina/configurationboapi:latest
    ports:
      - "8002:8002"
      - "5005:5005" # Debugging port
    env_file: backoffice/ConfigurationBOApi/.env
    environment:
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
    networks:
      - spring
    restart: always

  bookingsservice:
    container_name: bookingsservice
    image: pablo7molina/bookingsservice:latest
    ports:
      - "8001:8001"
      - "5006:5006" # Debugging port
    depends_on:
      - postgres
      - kafka
    env_file: services/BookingsService/.env
    environment:
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006
    networks:
      - spring
    restart: always

volumes:
  data-postgres:

networks:
  spring:
