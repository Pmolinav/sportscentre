spring.application.name=bookingsService
server.port=${PORT:8001}
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_DATABASE:sportscentre}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:mysecretpassword}
spring.datasource.driverClassName=org.postgresql.Driver

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.hibernate.ddl-auto=update

logging.level.org.hibernate.SQL=DEBUG
logging.level.root=DEBUG
logging.file.path=/app/logs

spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.consumer.group-id=my-group-id

management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

#-------------------------------------
#spring.application.name=sportscentre-backend
#spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_DATABASE:sportscentre}
#spring.datasource.username=${DB_USERNAME:postgres}
#spring.datasource.password=${DB_PASSWORD:mysecretpassword}
#
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=update
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.root=DEBUG
#
#
#springdoc.api-docs.path=/api-docs
#springdoc.swagger-ui.path=/api/swagger.html
#springdoc.swagger-ui.configUrl=/api-docs/swagger-config
#springdoc.swagger-ui.url=/api-docs
#springdoc.swagger-ui.tagsSorter=alpha
#
#token.secret=${ACCESS_TOKEN_SECRET:accessTokenSecret}
#token.validity=${TOKEN_VALIDITY_SECONDS:12345}
#server.port=${PORT:8001}

